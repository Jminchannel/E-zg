<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/09/03/%E5%87%AF%E7%A5%9E%E9%99%8D%E4%B8%B4/"/>
    <url>/2023/09/03/%E5%87%AF%E7%A5%9E%E9%99%8D%E4%B8%B4/</url>
    
    <content type="html"><![CDATA[<p><img src="/assets/image-20230903091943106.png" alt="image-20230903091943106"></p><p><img src="/assets/image-20230903091953622.png" alt="image-20230903091953622"></p><p><img src="/assets/image-20230903093218931.png" alt="image-20230903093218931"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/09/03/1_%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/"/>
    <url>/2023/09/03/1_%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库概述"><a href="#数据库概述" class="headerlink" title="数据库概述"></a>数据库概述</h1><p><strong>1.为什么使用数据库</strong></p><ul><li>持久化：将数据保存到可掉电式存储设备中，在硬盘中“固化”数据</li><li>持久化的主要作用：将内存中的数据存储在关系型数据库中</li></ul><p><img src="/assets/image-20230820175721499.png" alt="image-20230820175721499"></p><p><strong>2.数据库与数据库管理系统</strong></p><p><strong>相关概念</strong></p><ul><li>DB:database <strong>数据库</strong>。即存储数据的“仓库”，其本质是一个文件系统。它保存了一系列有组织的数据。</li><li>DBMS:<strong>数据库管理系统</strong>。是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制。用户通过数据库管理系统访问数据库中表内的数据。</li><li>SQL:<strong>结构化查询语言</strong>。用来与数据库通信的语言。</li></ul><p><strong>二者关系</strong></p><p>数据库管理系统(DBMS)可以管理多个数据库，一般开发人员会针对每一个应用创建一个数据库。为保存应用中实体的数据，一般会在数据库创建多个表，以保存程序中实体用户的数据。</p><p><strong>常见DBMS</strong></p><ul><li>MYSQL</li><li>ORACLE</li><li>SQLSERVER</li></ul><p><strong>3.MYSQL介绍</strong></p><p><strong>概述</strong></p><p>MYSQL是一个<strong>开放源代码的关系型数据库管理系统</strong></p><p><strong>版本由5.7—-&gt;8.0</strong></p><p><strong>ORACLE与<strong><strong>MYSQL</strong></strong>的选择</strong></p><p>Oracle更适合大型跨国企业的使用，对性能要求以及安全性有更高的要求。</p><p>MySQL由于其体积小、速度快、总体拥有成本低，可处理上干万条记录的大型数据库，尤其是开放源码这一特点，使得很多互联网公司、中小型网站选择了MySQL作为网站数据库(Facebook,Twitter,YouTube,阿里巴巴&#x2F;蚂蚁金服，去哪儿，美团外卖，腾讯)。</p><p><strong>4.RDBMS与非RDMBS</strong></p><p>使用最多的是RDBMS关系型数据库</p><p><strong>RDBMS</strong></p><p>实质：最古老的数据库类型，<strong>二元关系</strong></p><ul><li>关系型数据库以行列存储数据，这一行列系列组成表TABLE，一组表组成库DATABASE</li><li>表与表之间的数据记录存在关系，关系型数据库就是建立在关系模型基础上的数据库</li><li>SQL是查询语言</li></ul><p>优势</p><ul><li>复杂查询</li><li>事务支持</li></ul><p><strong>非RDBMS(NoSQL)</strong></p><p>实质：RDBMS的阉割版，基于键值对存储数据，性能贼高。通过减少不常用的功能进一步提高性能。</p><p><strong>键值型数据库（如Redis）</strong></p><p><strong>文档型数据库（如MongoDB）…</strong></p><p>NoSQL对SQL做出了很好的补充，比如实际开发中，有很多业务需求，其实并不需要完整的关系型数据库功能非关系型数据库的功能就足够使用了。这种情况下，使用性能更高、成本更低的非关系型数据库当然是更明智的选择。比如：日志收集、排行榜、定时器等。</p><p><strong>5.RDBMS设计规则</strong></p><ul><li>关系型数据库的典型数据结构就是数据表，这些数据表的组成都是结构化的(Structured)。</li><li>将数据放到表中，表再放到库中。</li><li>一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。表名具有唯一性。</li><li>表具有一些特性，这些特性定义了数据在表中如何存储，类似Java和Python中“类”的设计。</li></ul><p><strong>表，记录，字段</strong></p><ul><li>ER模型（entity-relationship，实体-联系）三个主要概念：实体集，属性，联系集</li><li>一个实体集(class)对应于数据库中的一个表(table),一个实体(instance)则对应于数据库表中的一行(row),也称为一条记录(record)。一个属性(attribute)对应于数据库表中的一列(column),也称为一个字段(field)。</li></ul><p>ORM思想 表—java的类 表的数据—类的对象 表的列—类的属性</p><p><strong>表的关联关系</strong></p><p>存在四种</p><ol><li>一对一关联</li><li>一对多关联</li><li>多对多关联</li><li>自我引用</li></ol><p><strong>一对一 one to one</strong></p><p>举例：学生表（学号、姓名、手机号码、班级、系别、身份证号码、家庭住籍贯、紧急联系人…）</p><ul><li><p>拆为两个表</p></li><li><ul><li>基础信息表：学号、姓名、手机号码、班级、系别</li><li>档案信息表：身份证号码、家庭住籍贯、紧急联系人…</li></ul></li><li><p>建表原则</p></li><li><ul><li>外键唯一：主表的主键和从表的外键（唯一），形成主外键关系，外键唯一。</li><li>外键是主键：主表的主键和从表的主键，形成主外键关系。</li></ul></li></ul><p><strong>一对多 one to many</strong></p><p>举例：客户表和订单表，分类表和商品表，部门表和员工表</p><p><strong>多对多 many to many</strong></p><p>创建第三表，即联接表，将多对多划分为两个一对多关系。</p><ul><li>学生信息表：一行代表一个学生的信息（学号、姓名、手机号码、班级、系别…）</li><li>课程信息表：一行代表一个课程的信息（课程编号、授课老师、简介…）</li><li>选课信息表：一个学生可以选多门课，一门课可以被多个学生选择</li></ul><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p><img src="/assets/image-20230820190615531.png" alt="image-20230820190615531"></p><p><img src="/assets/image-20230820190652783.png" alt="image-20230820190652783"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
